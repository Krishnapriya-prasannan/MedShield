{"ast":null,"code":"var _jsxFileName = \"/home/krishnapriya/MedShield/frontend/src/pages/PrescriptionUploadPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useContext } from \"react\";\nimport { fetchPrescriptions } from \"../services/api\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrescriptionUploadPage = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [prescriptions, setPrescriptions] = useState([]);\n  useEffect(() => {\n    const getPrescriptions = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        try {\n          const res = await fetchPrescriptions(token);\n          setPrescriptions(res.data);\n        } catch (error) {\n          console.error(\"Error fetching prescriptions\", error);\n        }\n      }\n    };\n    getPrescriptions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Prescriptions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: prescriptions.length > 0 ? prescriptions.map((prescription, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: prescription.medicines.join(\", \")\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No prescriptions found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(PrescriptionUploadPage, \"vXaUvwTH7/ycHlgtBe2dD6oYJB8=\");\n_c = PrescriptionUploadPage;\nexport default PrescriptionUploadPage;\nvar _c;\n$RefreshReg$(_c, \"PrescriptionUploadPage\");","map":{"version":3,"names":["useEffect","useState","useContext","fetchPrescriptions","AuthContext","jsxDEV","_jsxDEV","PrescriptionUploadPage","_s","user","prescriptions","setPrescriptions","getPrescriptions","token","localStorage","getItem","res","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","prescription","index","medicines","join","_c","$RefreshReg$"],"sources":["/home/krishnapriya/MedShield/frontend/src/pages/PrescriptionUploadPage.js"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport { fetchPrescriptions } from \"../services/api\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nconst PrescriptionUploadPage = () => {\n    const { user } = useContext(AuthContext);\n    const [prescriptions, setPrescriptions] = useState([]);\n\n    useEffect(() => {\n        const getPrescriptions = async () => {\n            const token = localStorage.getItem(\"token\");\n            if (token) {\n                try {\n                    const res = await fetchPrescriptions(token);\n                    setPrescriptions(res.data);\n                } catch (error) {\n                    console.error(\"Error fetching prescriptions\", error);\n                }\n            }\n        };\n        getPrescriptions();\n    }, []);\n\n    return (\n        <div>\n            <h2>Your Prescriptions</h2>\n            <ul>\n                {prescriptions.length > 0 ? (\n                    prescriptions.map((prescription, index) => (\n                        <li key={index}>{prescription.medicines.join(\", \")}</li>\n                    ))\n                ) : (\n                    <p>No prescriptions found.</p>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default PrescriptionUploadPage;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAK,CAAC,GAAGP,UAAU,CAACE,WAAW,CAAC;EACxC,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZ,MAAMY,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACP,IAAI;UACA,MAAMG,GAAG,GAAG,MAAMb,kBAAkB,CAACU,KAAK,CAAC;UAC3CF,gBAAgB,CAACK,GAAG,CAACC,IAAI,CAAC;QAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACxD;MACJ;IACJ,CAAC;IACDN,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlB,OAAA;MAAAc,QAAA,EACKV,aAAa,CAACe,MAAM,GAAG,CAAC,GACrBf,aAAa,CAACgB,GAAG,CAAC,CAACC,YAAY,EAAEC,KAAK,kBAClCtB,OAAA;QAAAc,QAAA,EAAiBO,YAAY,CAACE,SAAS,CAACC,IAAI,CAAC,IAAI;MAAC,GAAzCF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyC,CAC1D,CAAC,gBAEFlB,OAAA;QAAAc,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAChC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAChB,EAAA,CAjCID,sBAAsB;AAAAwB,EAAA,GAAtBxB,sBAAsB;AAmC5B,eAAeA,sBAAsB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}