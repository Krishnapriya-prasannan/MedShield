{"ast":null,"code":"var _jsxFileName = \"/home/krishnapriya/MedShield/frontend/src/pages/AuthPage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleLogin = () => {\n    if (credentials.username && credentials.password) {\n      login({\n        username: credentials.username\n      });\n      navigate(\"/\");\n    } else {\n      alert(\"Please enter valid credentials!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"biVvZsO+GwY/T0jk77FuZ9PSCKI=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useContext","useState","useNavigate","AuthContext","jsxDEV","_jsxDEV","AuthPage","_s","login","navigate","credentials","setCredentials","username","password","handleChange","e","target","name","value","handleLogin","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/krishnapriya/MedShield/frontend/src/pages/AuthPage.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\n\nconst AuthPage = () => {\n  const { login } = useContext(AuthContext);\n  const navigate = useNavigate();\n  \n  const [credentials, setCredentials] = useState({ username: \"\", password: \"\" });\n\n  const handleChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  const handleLogin = () => {\n    if (credentials.username && credentials.password) {\n      login({ username: credentials.username });\n      navigate(\"/\");\n    } else {\n      alert(\"Please enter valid credentials!\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} />\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} />\n      <button onClick={handleLogin}>Login</button>\n    </div>\n  );\n};\n\nexport default AuthPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAM,CAAC,GAAGR,UAAU,CAACG,WAAW,CAAC;EACzC,MAAMM,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC;IAAEW,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAE9E,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BJ,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAE,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACrE,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIT,WAAW,CAACE,QAAQ,IAAIF,WAAW,CAACG,QAAQ,EAAE;MAChDL,KAAK,CAAC;QAAEI,QAAQ,EAAEF,WAAW,CAACE;MAAS,CAAC,CAAC;MACzCH,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,MAAM;MACLW,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACT,IAAI,EAAC,UAAU;MAACU,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAEd;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpFpB,OAAA;MAAOqB,IAAI,EAAC,UAAU;MAACT,IAAI,EAAC,UAAU;MAACU,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAEd;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxFpB,OAAA;MAAQwB,OAAO,EAAEV,WAAY;MAAAE,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAAClB,EAAA,CA3BID,QAAQ;EAAA,QAEKJ,WAAW;AAAA;AAAA4B,EAAA,GAFxBxB,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}