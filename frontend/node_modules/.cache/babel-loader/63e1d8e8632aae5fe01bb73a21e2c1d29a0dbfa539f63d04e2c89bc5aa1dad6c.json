{"ast":null,"code":"var _jsxFileName = \"/home/krishnapriya/MedShield/frontend/src/pages/PharmacyAccessPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container, Typography, Button, TextField } from \"@mui/material\";\nimport QrScanner from \"react-qr-scanner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PharmacyAccessPage = () => {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [scanning, setScanning] = useState(false);\n  const handleScan = data => {\n    if (data) {\n      setUserId(data.text || data); // QR Scanner may return different formats\n      setScanning(false); // Stop scanning after successful scan\n    }\n  };\n  const handleError = err => {\n    console.error(\"QR Scanner Error:\", err);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: \"50px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Pharmacy Prescription Access\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Enter or Scan User ID\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: userId,\n      onChange: e => setUserId(e.target.value),\n      style: {\n        margin: \"20px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setScanning(true),\n      children: \"Scan QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), scanning && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(QrScanner, {\n        delay: 300,\n        onScan: handleScan,\n        onError: handleError,\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => setScanning(false),\n        children: \"Stop Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        marginTop: \"20px\"\n      },\n      onClick: () => console.log(\"Retrieving prescription for User ID:\", userId),\n      children: \"Retrieve Prescription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(PharmacyAccessPage, \"inIP8/tsDefl0W7giSoD1oRqHag=\");\n_c = PharmacyAccessPage;\nexport default PharmacyAccessPage;\nvar _c;\n$RefreshReg$(_c, \"PharmacyAccessPage\");","map":{"version":3,"names":["React","useState","Container","Typography","Button","TextField","QrScanner","jsxDEV","_jsxDEV","PharmacyAccessPage","_s","userId","setUserId","scanning","setScanning","handleScan","data","text","handleError","err","console","error","maxWidth","style","marginTop","textAlign","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","e","target","margin","color","onClick","delay","onScan","onError","width","log","_c","$RefreshReg$"],"sources":["/home/krishnapriya/MedShield/frontend/src/pages/PharmacyAccessPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Typography, Button, TextField } from \"@mui/material\";\nimport QrScanner from \"react-qr-scanner\";\n\nconst PharmacyAccessPage = () => {\n  const [userId, setUserId] = useState(\"\");\n  const [scanning, setScanning] = useState(false);\n\n  const handleScan = (data) => {\n    if (data) {\n      setUserId(data.text || data); // QR Scanner may return different formats\n      setScanning(false); // Stop scanning after successful scan\n    }\n  };\n\n  const handleError = (err) => {\n    console.error(\"QR Scanner Error:\", err);\n  };\n\n  return (\n    <Container maxWidth=\"sm\" style={{ marginTop: \"50px\", textAlign: \"center\" }}>\n      <Typography variant=\"h5\">Pharmacy Prescription Access</Typography>\n\n      {/* User can enter ID manually */}\n      <TextField\n        label=\"Enter or Scan User ID\"\n        variant=\"outlined\"\n        fullWidth\n        value={userId}\n        onChange={(e) => setUserId(e.target.value)}\n        style={{ margin: \"20px 0\" }}\n      />\n\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setScanning(true)}>\n        Scan QR Code\n      </Button>\n\n      {scanning && (\n        <div style={{ marginTop: \"20px\" }}>\n          <QrScanner\n            delay={300}\n            onScan={handleScan}\n            onError={handleError}\n            style={{ width: \"100%\" }}\n          />\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => setScanning(false)}>\n            Stop Scanning\n          </Button>\n        </div>\n      )}\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ marginTop: \"20px\" }}\n        onClick={() => console.log(\"Retrieving prescription for User ID:\", userId)}\n      >\n        Retrieve Prescription\n      </Button>\n    </Container>\n  );\n};\n\nexport default PharmacyAccessPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}