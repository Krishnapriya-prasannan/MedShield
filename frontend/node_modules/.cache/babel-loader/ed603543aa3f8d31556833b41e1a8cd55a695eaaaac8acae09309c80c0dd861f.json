{"ast":null,"code":"var _jsxFileName = \"/home/krishnapriya/MedShield/frontend/src/pages/AuthPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Button, TextField, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const {\n    login\n  } = useContext(AuthContext);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const navigate = useNavigate();\n  const handleAuth = async e => {\n    e.preventDefault();\n    const endpoint = isSignup ? \"/api/auth/signup\" : \"/api/auth/login\";\n    try {\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          ...(isSignup && {\n            email\n          })\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        login({\n          username,\n          token: data.token\n        });\n        navigate(\"/\");\n      } else {\n        alert(data.msg);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: \"300px\",\n      margin: \"auto\",\n      mt: 5,\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: isSignup ? \"Signup\" : \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), isSignup && /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email\",\n      fullWidth: true,\n      sx: {\n        mt: 2\n      },\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Username\",\n      fullWidth: true,\n      sx: {\n        mt: 2\n      },\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Password\",\n      type: \"password\",\n      fullWidth: true,\n      sx: {\n        mt: 2\n      },\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      sx: {\n        mt: 2\n      },\n      onClick: handleAuth,\n      children: isSignup ? \"Signup\" : \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        mt: 2\n      },\n      onClick: () => setIsSignup(!isSignup),\n      children: isSignup ? \"Already have an account? Login\" : \"New user? Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"C5Sv3Ykp7a0RwMxFtp6hRk/qN34=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useContext","AuthContext","useNavigate","Box","Button","TextField","Typography","jsxDEV","_jsxDEV","AuthPage","_s","login","isSignup","setIsSignup","username","setUsername","password","setPassword","email","setEmail","navigate","handleAuth","e","preventDefault","endpoint","response","fetch","method","headers","body","JSON","stringify","data","json","ok","token","alert","msg","error","console","sx","width","margin","mt","textAlign","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","target","type","onClick","_c","$RefreshReg$"],"sources":["/home/krishnapriya/MedShield/frontend/src/pages/AuthPage.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Button, TextField, Typography } from \"@mui/material\";\n\nconst AuthPage = () => {\n  const { login } = useContext(AuthContext);\n  const [isSignup, setIsSignup] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleAuth = async (e) => {\n    e.preventDefault();\n    const endpoint = isSignup ? \"/api/auth/signup\" : \"/api/auth/login\";\n    \n    try {\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password, ...(isSignup && { email }) }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        login({ username, token: data.token });\n        navigate(\"/\");\n      } else {\n        alert(data.msg);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return (\n    <Box sx={{ width: \"300px\", margin: \"auto\", mt: 5, textAlign: \"center\" }}>\n      <Typography variant=\"h5\">{isSignup ? \"Signup\" : \"Login\"}</Typography>\n      \n      {isSignup && (\n        <TextField\n          label=\"Email\"\n          fullWidth\n          sx={{ mt: 2 }}\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      )}\n\n      <TextField\n        label=\"Username\"\n        fullWidth\n        sx={{ mt: 2 }}\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        fullWidth\n        sx={{ mt: 2 }}\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Button variant=\"contained\" sx={{ mt: 2 }} onClick={handleAuth}>\n        {isSignup ? \"Signup\" : \"Login\"}\n      </Button>\n      <Button sx={{ mt: 2 }} onClick={() => setIsSignup(!isSignup)}>\n        {isSignup ? \"Already have an account? Login\" : \"New user? Signup\"}\n      </Button>\n    </Box>\n  );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}